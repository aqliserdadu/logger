#!/bin/bash
# ============================================
#  logger (Smart Portable Analyzer System) - Control Script
# ============================================
# Nama Aplikasi : Smart Portable Analyzer System (logger)
# Deskripsi     : Kontrol script untuk sistem pemantauan cuaca dan kualitas udara
# Dibuat oleh   : Abu Bakar <abubakar.it.dev@gmail.com>
# Versi         : 1.0
# Lisensi       : Private/Internal Project
# ============================================

# Strict mode untuk penanganan error yang lebih baik
set -euo pipefail
trap 'echo "‚ùå Error pada baris $LINENO. Perintah gagal: $BASH_COMMAND"' ERR

# Konfigurasi
readonly SERVICES=("logger-sensor.service" "logger-web.service" "logger-web-log.service" "logger-backup.service" "logger-gpio.service" "logger-klhk-send.service" "logger-klhk-retry.service" "logger-has-send.service")
readonly LOG_DIR="/opt/logger/logs"
readonly APP_BASE="/opt/logger"
readonly BIN_PATH="/usr/bin/logger"
readonly DB_DIR="$APP_BASE/database"

# Fungsi untuk menampilkan pesan error dan keluar
error_exit() {
    echo "‚ùå $1" >&2
    exit 1
}

# Fungsi untuk memeriksa privilege
check_privileges() {
    if [[ $EUID -ne 0 ]]; then
        echo "‚ö†Ô∏è  Perintah ini membutuhkan privilege root. Silakan gunakan sudo." >&2
        exit 1
    fi
}

# Fungsi untuk memeriksa apakah service ada
check_exists() {
    echo "üîç Memeriksa keberadaan service..."
    local found=false
    for service in "${SERVICES[@]}"; do
        if [ -f "/etc/systemd/system/$service" ]; then
            echo "‚úî $service ditemukan"
            found=true
        else
            echo "‚úñ $service TIDAK ditemukan"
        fi
    done
    
    if [ "$found" = false ]; then
        error_exit "Tidak ada service yang ditemukan. Silakan jalankan installer terlebih dahulu."
    fi
}

# Fungsi untuk memulai semua service
start_services() {
    check_privileges
    echo "üöÄ Memulai semua service..."
    for service in "${SERVICES[@]}"; do
        if systemctl is-active --quiet "$service"; then
            echo "‚ÑπÔ∏è  $service sudah berjalan"
        else
            systemctl start "$service" && echo "‚ñ∂Ô∏è $service dijalankan" || echo "‚ùå Gagal menjalankan $service"
        fi
    done
    echo "‚úÖ Semua service telah diproses."
}

# Fungsi untuk menghentikan semua service
stop_services() {
    check_privileges
    echo "üõë Menghentikan semua service..."
    for service in "${SERVICES[@]}"; do
        if systemctl is-active --quiet "$service"; then
            systemctl stop "$service" && echo "‚èπÔ∏è $service dihentikan" || echo "‚ùå Gagal menghentikan $service"
        else
            echo "‚ÑπÔ∏è  $service sudah tidak berjalan"
        fi
    done
    echo "‚úÖ Semua service telah diproses."
}

# Fungsi untuk memulai service spesifik
start_service_by_name() {
    check_privileges
    local name="$1"
    local service_name="logger-${name}.service"
    
    if [[ ! " ${SERVICES[*]} " == *"$service_name"* ]]; then
        error_exit "Service '$name' tidak dikenal. Gunakan 'logger help' untuk melihat service yang tersedia."
    fi
    
    if systemctl is-active --quiet "$service_name"; then
        echo "‚ÑπÔ∏è  $service_name sudah berjalan"
    else
        systemctl start "$service_name" && echo "‚ñ∂Ô∏è $service_name dijalankan" || error_exit "Gagal menjalankan $service_name"
    fi
}

# Fungsi untuk menghentikan service spesifik
stop_service_by_name() {
    check_privileges
    local name="$1"
    local service_name="logger-${name}.service"
    
    if [[ ! " ${SERVICES[*]} " == *"$service_name"* ]]; then
        error_exit "Service '$name' tidak dikenal. Gunakan 'logger help' untuk melihat service yang tersedia."
    fi
    
    if systemctl is-active --quiet "$service_name"; then
        systemctl stop "$service_name" && echo "‚èπÔ∏è $service_name dihentikan" || error_exit "Gagal menghentikan $service_name"
    else
        echo "‚ÑπÔ∏è  $service_name sudah tidak berjalan"
    fi
}

# Fungsi untuk mereset semua service
reset_services() {
    echo "üîÑ Mereset semua service..."
    stop_services
    sleep 2
    start_services
}

# Fungsi untuk menampilkan status semua service
status_services() {
    echo "üìä Status semua service:"
    echo "========================================"
    
    for service in "${SERVICES[@]}"; do
        echo -n "üìã Status $service: "
        if systemctl is-active --quiet "$service"; then
            echo -e "\033[32mAKTIF\033[0m"
        else
            echo -e "\033[31mTIDAK AKTIF\033[0m"
        fi
        
        if systemctl is-enabled --quiet "$service"; then
            echo "   Status: Enabled"
        else
            echo "   Status: Disabled"
        fi
        
        echo "----------------------------------------"
    done
    
    echo "üí° Untuk detail lebih lanjut, jalankan: systemctl status <service>"
}

# Fungsi untuk uninstall
uninstall_services() {
    check_privileges
    echo "üö® Memulai proses uninstall logger (Smart Portable Analyzer System)..."
    echo "‚ö†Ô∏è  Operasi ini akan menghapus semua service dan file aplikasi!"
    
    # Konfirmasi sebelum uninstall
    read -p "‚ùì Apakah Anda yakin ingin melanjutkan uninstall? [y/N]: " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Uninstall dibatalkan."
        exit 1
    fi
    
    # Tanya tentang database
    read -p "‚ùì Apakah Anda ingin menghapus database? [y/N]: " -n 1 -r
    echo
    DELETE_DB=$REPLY
    
    echo "üõë Menghentikan dan menonaktifkan service..."
    for service in "${SERVICES[@]}"; do
        if systemctl is-active --quiet "$service"; then
            systemctl stop "$service" && echo "‚úÖ $service dihentikan" || echo "‚ùå Gagal menghentikan $service"
        fi
        
        if systemctl is-enabled --quiet "$service"; then
            systemctl disable "$service" && echo "‚úÖ $service dinonaktifkan" || echo "‚ùå Gagal menonaktifkan $service"
        fi
        
        if [ -f "/etc/systemd/system/$service" ]; then
            rm -f "/etc/systemd/system/$service" && echo "üóëÔ∏è $service dihapus" || echo "‚ùå Gagal menghapus $service"
        fi
    done
    
    echo "üîÑ Reload systemd daemon..."
    systemctl daemon-reload
    systemctl reset-failed
    
    if [[ $DELETE_DB =~ ^[Yy]$ ]]; then
        echo "üóëÔ∏è Menghapus seluruh direktori $APP_BASE termasuk database..."
        rm -rf "$APP_BASE" && echo "‚úÖ Direktori aplikasi dihapus" || echo "‚ùå Gagal menghapus direktori aplikasi"
    else
        echo "‚ö†Ô∏è Menyisakan database. Menghapus semua kecuali folder $DB_DIR..."
        if [ -d "$APP_BASE" ]; then
            find "$APP_BASE" -mindepth 1 -not -path "$DB_DIR" -not -path "$DB_DIR/*" -exec rm -rf {} + && echo "‚úÖ Aplikasi dihapus (database disimpan)" || echo "‚ùå Gagal menghapus aplikasi"
        fi
        echo "‚úÖ Folder database tetap disimpan di $DB_DIR"
    fi
    
    if [ -f "$BIN_PATH" ]; then
        rm -f "$BIN_PATH" && echo "üóëÔ∏è CLI logger dihapus dari $BIN_PATH" || echo "‚ùå Gagal menghapus CLI logger"
    else
        echo "‚ÑπÔ∏è  CLI logger tidak ditemukan di $BIN_PATH, dilewati."
    fi
    
    echo "‚úÖ Uninstall selesai. Sistem telah dibersihkan."
}

# Fungsi untuk menampilkan menu bantuan
help_menu() {
    echo "========================================================================================================"
    echo " Smart Portable Analyzer System (logger) - Control Script"
    echo "========================================================================================================"
    echo "üìå Dibuat oleh        : Abu Bakar <abubakar.it.dev@gmail.com>"
    echo "üìå Deskripsi          : Sistem pemantauan cuaca dan kualitas udara otomatis berbasis Python & API"
    echo "üìå Lokasi Instalasi   : /opt/logger"
    echo "üìå Service            : logger-sensor, logger-web, logger-web-log, logger-backup, logger-klhk-send, logger-klhk-retry"
    echo "üìå Web Port           : 0.0.0.0:5010"
    echo "üìå Web Log Port       : 0.0.0.0:3000"
    echo "üìå PhpMyAdmin         : 0.0.0.0:8080"
    echo "========================================================================================================="
    echo ""
    echo "Penggunaan: logger [perintah] [opsi]"
    echo ""
    echo "Service yang tersedia:"
    echo "  sensor              ‚Üí Pembaca sensor"
    echo "  web                 ‚Üí Web Dashboard"
    echo "  web-log             ‚Üí Web Dashboard Log"
    echo "  backup              ‚Üí Backup Data"
    echo "  klhk-send           ‚Üí API kirim data KLHK"
    echo "  klhk-retry          ‚Üí Retry API kirim data KLHK"
    echo ""
    echo "Perintah yang tersedia:"
    echo "  uninstall           ‚Üí Hapus logger (membutuhkan konfirmasi)"
    echo "  start               ‚Üí Menjalankan semua service"
    echo "  stop                ‚Üí Menghentikan semua service"
    echo "  start [nama]        ‚Üí Jalankan service spesifik (contoh: logger start backup)"
    echo "  stop [nama]         ‚Üí Hentikan service spesifik (contoh: logger stop backup)"
    echo "  reset               ‚Üí Reset semua service (stop lalu start)"
    echo "  status              ‚Üí Tampilkan status semua service"
    echo "  check               ‚Üí Cek apakah file service sudah ada"
    echo "  help                ‚Üí Tampilkan menu bantuan"
    echo ""
    echo "=========================================================================================================="
}

# === Entry Point ===
case "${1:-}" in
    uninstall)
        uninstall_services
        ;;
    start)
        if [ -n "${2:-}" ]; then
            start_service_by_name "$2"
        else
            start_services
        fi
        ;;
    stop)
        if [ -n "${2:-}" ]; then
            stop_service_by_name "$2"
        else
            stop_services
        fi
        ;;
    reset)
        reset_services
        ;;
    status)
        status_services
        ;;
    check)
        check_exists
        ;;
    help|"")
        help_menu
        ;;
    *)
        echo "‚ùå Perintah tidak dikenal: $1"
        echo "üí° Gunakan 'logger help' untuk melihat perintah yang tersedia."
        exit 1
        ;;
esac